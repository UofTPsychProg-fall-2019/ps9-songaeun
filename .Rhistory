View(value)
As = c('A_1', 'A_2', 'A_3', 'A_4', 'A_5','A_6', 'A_7', 'A_8', 'A_9')
ipip.l <- ipip %>%
gather(As, key = 'Agreeableness', value = select(starts_with('A_')))
ipip.l <- ipip %>%
gather(As, key = 'Agreeableness', value = select(ipip,starts_with('A_')))
ipip.l <- ipip %>%
gather(As, key = 'Agreeableness', value = select(.,starts_with('A_')))
ipip.l <- ipip %>%
gather(As, key = 'Agreeableness')#, value = select(.,starts_with('A_')))
As = c('A_1', 'A_2', 'A_3', 'A_4', 'A_5','A_6', 'A_7', 'A_8', 'A_9')
ipip.l <- ipip %>%
gather(As, key = 'Agreeableness')#, value = select(.,starts_with('A_')))
library(tidyverse)
setwd('~/Documents/programming/Lec10')
df <- read_csv("example_data.csv")
factorVar <- c('sbj', 'answer','iconset', 'item', 'icon')
df <- mutate_at(df, factorVar, ~factor(.))
df1 <- filter(df,rt>250)
df2 <- mutate(df1,rtlog=log(rt))
df3 <- arrange(df2,rtlog)
df1 %>%
summarise(acc=mean(correct==1))
df1 %>%
select(rt,rtlog) %>%
hist()
df %>%
group_by(correct) #G: should check if grouped or not with header of the df
df %>%
group_by(correct,sbj)
df %>%
group_by(correct) #G: should check if grouped or not with header of the df
df %>%
filter(rt>150) %>%                 # remove bad trials
group_by(expdur,iconset) %>%       # group conditions
summarise(accuracy=mean(correct))  # get means per conditions
rt.grp <- df %>%
filter(rt>150, correct, answer == 'YES') %>%
group_by(sbj, iconset, expdur) %>%
summarise(medRT = median(rt)) %>%
group_by(iconset,expdur) %>%
summarise(n = length(medRT),
mrt=mean(medRT),
srt=sd(medRT)/sqrt(length(medRT)-1))
rt.grp <- df %>%
filter(rt>150, correct, answer == 'YES') %>%
group_by(sbj, iconset, expdur) %>%
summarise(medRT = median(rt))
rt.sbj <- df %>%
filter(rt>150, correct) %>% # usually rt is valid only when reponse was correct
group_by(sbj, iconset, expdur) %>%
summarise(rtmed = median(rt))
rt.sbj
postq <- read_csv('post_study.csv')
View(postq)
View(postq)
postq$sbj <- factor(postq$sbj)
View(rt.grp)
View(rt.sbj)
View(rt.sbj)
rt.grp <- rt.sbj %>%
group_by(iconset,expdur) %>%
summarise(mrt=mean(rtmed))
rt.grp
rt.grp.w <- rt.grp %>%
spread(key=expdur,value=mrt)
rt.grp.w
setwd('~/Documents/GitHub/ps9-songaeun')
ipip <- read_csv('ipip50_sample.csv')
View(ipip)
View(ipip)
As = c('A_1', 'A_2', 'A_3', 'A_4', 'A_5','A_6', 'A_7', 'A_8', 'A_9')
ipip.l <- ipip %>%
gather('A_1', 'A_2', 'A_3', 'A_4', 'A_5','A_6', 'A_7', 'A_8', 'A_9',
key = 'Agreeableness', value = select(.,starts_with('A_')))
ipip.l <- ipip %>%
gather('A_1', 'A_2', 'A_3', 'A_4', 'A_5','A_6', 'A_7', 'A_8', 'A_9',
key = 'Agreeableness', value = select(ipip,starts_with('A_')))
rt.grp.l
rt.grp.l <- rt.grp.w %>%
gather('33','50','75','125','250',key=expdur,value=mrt)
rt.grp.l
View(rt.grp.l)
View(rt.grp.w)
ipip.l <- ipip %>%
gather(As, key = 'Agreeableness', value = 'A_values')
View(ipip.l)
View(ipip.l)
As = c('A_1', 'A_2', 'A_3', 'A_4', 'A_5','A_6', 'A_7', 'A_8', 'A_9', 'A_10')
columns(ipip)
colnames(ipip)
var_name = colnames(ipip)
str_detect(var_name, 'A_')
starts_with(var_namem 'A_')
starts_with(var_name, 'A_')
?starts_with
select(starts_with(var_name, 'A_'))
str_detect(var_name, 'A_')
var_name(str_detect(var_name, 'A_'))
Cs = c('C_1', 'C_2', 'C_3', 'C_4', 'C_5','C_6', 'C_7', 'C_8', 'C_9', 'C_10')
Es = c('E_1', 'E_2', 'E_3', 'E_4', 'E_5','E_6', 'E_7', 'E_8', 'E_9', 'E_10')
Ns = c('N_1', 'N_2', 'N_3', 'N_4', 'N_5','N_6', 'N_7', 'N_8', 'N_9', 'N_10')
Os = c('O_1', 'O_10')
ipip.l <- ipip %>%
gather(As, key = 'Agreeableness', value = 'A_values') %>%
gather(Cs, key = 'Conscientiousness', value = 'C_values') %>%
gather(Es, key = 'Extroversion', value = 'E_values') %>%
gather(Ns, key = 'Neuroticism', value = 'N_values') %>%
gather(Os, key = 'Openness', value = 'O_values')
View(ipip.l)
View(ipip.l)
ipip.l <- ipip %>%
gather(As, key = 'Agreeableness', value = 'A_values') #%>%
ipip.l <- ipip %>%
gather(As, key = 'Agreeableness', value = 'A_values') %>%
gather(Cs, key = 'Conscientiousness', value = 'C_values') #%>%
ipip.l <- ipip %>%
gather(As, key = 'Agreeableness', value = 'A_values') #%>%
ipip.l <- ipip %>%
gather(As, Cs, Es, Ns, Os, key = 'Agreeableness', value = 'A_values') #%>%
var_na,e
var_name
var_name[6:end]
var_name[6:48]
var_name[7:48]
ipip.l <- ipip %>%
gather(colnames(ipip)[7:48], key = 'trait_type', value = 'trait_values') #%>%
View(ipip.l)
remove(ipip.l)
ipip.l <- ipip %>%
gather(colnames(ipip)[7:48], key = 'trait_type', value = 'trait_values') #%>%
ipip.l <- ipip %>%
gather(colnames(.)[7:48], key = 'trait_type', value = 'trait_values') #%>%
remove(ipip.l)
ipip.l <- ipip %>%
gather(colnames(.)[7:48], key = 'trait_type', value = 'trait_values')
View(ipip.l)
View(ipip.l)
summary(ipip.l)
summary(ipip.l$trait_type)
View(df)
ipip.l <- ipip.l %>%
separate(into=c('trait','item'),sep="_")
ipip.l <- ipip.l %>%
separate(., into=c('trait','item'), sep="_")
ipip.l <- ipip.l %>%
separate(trait_type, into=c('trait','item'), sep="_")
ipip.comp <- ipip.l %>%
group_by(RID, trait) %>%
summarise(mean_trait=mean(trait_values))
ipip.comp
View(ipip.comp)
summary(ipip$RID)
summarise(ipip$RID)
View(ipip)
ipip.comp <- ipip %>%
select(age, gender, BMI, exer) %>%
left_join(ipip.comp)
View(ipip.comp)
ipip.comp <- ipip %>%
select(RID, age, gender, BMI, exer) %>%
left_join(ipip.comp)
ipip.comp <- ipip.l %>%
group_by(RID, trait) %>%
summarise(mean_trait=mean(trait_values))
ipip.sel <-ipip.l %>%
group_by(RID, trait)
View(ipip.sel)
ipip.sel<- ipip %>%
select(RID, age, gender, BMI, exer)
ipip.comp2 <- ipip %>%
select(RID, age, gender, BMI, exer) %>%
left_join(ipip.comp)
View(ipip.comp2)
View(ipip.comp2)
ipip.comp <- ipip %>%
select(RID, age, gender, BMI, exer) %>%
left_join(ipip.comp)
summary(ipip.comp)
ipip.comp$exer <-factor(ipip.comp$exer)
summary(ipip.comp)
ipip.comp <- arrange(ipip.comp)
ipip.comp <- arrange(ipip.comp$exer)
ipip.comp <- ipip.comp %>%
arrange(exer)
ipip.comp <- ipip.comp %>% arrange(desc(exer))
ipip.exer.freq <- ipip.comp %>% group_by(exer) %>% tally()
View(ipip.exer.freq)
View(ipip.exer.freq)
ipip.exer.freq <- ipip.comp$exer %>% tally()
ipip.comp <- arrange(ipip.comp, desc(ipip.exer.freq))
ipip.comp <- ipip.comp %>% arrange(exer, desc(ipip.exer.freq))
ipip.comp <- ipip.comp %>% arrange(exer, desc(ipip.exer.freq))
ipip.comp <- ipip.comp %>% arrange(exer, desc(ipip.exer.freq$n))
ipip.comp$exer <-factor(ipip.comp$exer)
ipip.comp <- ipip %>%
select(RID, age, gender, BMI, exer) %>%
left_join(ipip.comp)
ipip.comp <- ipip %>%
select(RID, age, gender, BMI, exer) %>%
left_join(ipip.comp)
summary(ipip.comp)
ipip.comp$exer <-factor(ipip.comp$exer)
summary(ipip.comp)
ipip.exer.freq <- ipip.comp %>% group_by(exer) %>% tally()
View(ipip.exer.freq)
View(ipip.exer.freq)
desc(ipip.exer.freq$n)
ipip.comp %>% arrange(exer, desc(ipip.exer.freq$n))
ipip.exer.freq %>% arrange(exer, desc(ipip.exer.freq$n))
ipip.exer.freq %>% arrange(exer, desc(ipip.exer.freq$n))
ipip.exer.freq %>% arrange(exer, desc(n))
ipip.comp$exer <-factor(ipip.comp$exer,
levels = c('less1mo', 'more5k', 'less1wk', 'veryRarelyNever',
'1or2wk', '3or5wk'))
ipip.comp <- ipip %>%
select(RID, age, gender, BMI, exer) %>%
left_join(ipip.comp)
ipip.comp <- ipip %>%
select(RID, age, gender, BMI, exer) %>%
left_join(ipip.comp)
ipip.l <- ipip %>%
gather(colnames(.)[7:48], key = 'trait_type', value = 'trait_values')
ipip.l <- ipip.l %>%
separate(trait_type, into=c('trait','item'), sep="_")
ipip.comp <- ipip.l %>%
group_by(RID, trait) %>%
summarise(mean_trait=mean(trait_values))
ipip.comp <- ipip %>%
select(RID, age, gender, BMI, exer) %>%
left_join(ipip.comp)
ipip.comp$exer <-factor(ipip.comp$exer,
levels = c('less1mo', 'more5k', 'less1wk', 'veryRarelyNever',
'1or2wk', '3or5wk'))
ipip.comp <- ipip.l %>%
group_by(RID, trait) %>%
summarise(mean_trait=mean(trait_values))
ipip.comp <- ipip %>%
select(RID, age, gender, BMI, exer) %>%
left_join(ipip.comp)
ipip.comp$exer <-factor(ipip.comp$exer,
levels = c('less1mo', 'more5wk', 'less1wk', 'veryRarelyNever',
'1or2wk', '3or5wk'))
dti <- read_csv('metrics_hipproi.csv')
substring("statistics", 1:10, 1:10
)
ff <- factor(substring("statistics", 1:10, 1:10), levels = letters))
as.integer(ff)
ff <- factor(substring("statistics", 1:10, 1:10), levels = letters)
ff
as.integer(ff)
factor(letters[1:20], labels = "letter")
ipip.l <- ipip.l %>%
separate(trait_type, into=c('trait','item'), sep="_")
ipip.l <- ipip %>%
gather(colnames(.)[7:48], key = 'trait_type', value = 'trait_values')
ipip.l <- ipip.l %>%
separate(trait_type, into=c('trait','item'), sep="_")
ipip.comp <- ipip.l %>%
group_by(RID, trait) %>%
summarise(mean_trait=mean(trait_values))
ipip.comp <- ipip %>%
select(RID, age, gender, BMI, exer) %>%
left_join(ipip.comp)
ipip.comp$exer <-factor(ipip.comp$exer)
ipip.comp <- ipip %>%
select(RID, age, gender, BMI, exer) %>%
left_join(ipip.comp)
ipip.comp <- ipip.l %>%
group_by(RID, trait) %>%
summarise(mean_trait=mean(trait_values))
ipip.comp <- ipip %>%
select(RID, age, gender, BMI, exer) %>%
left_join(ipip.comp)
summary(ipip.comp)
ipip.exer.freq <- ipip.comp %>% group_by(exer) %>% tally()
ipip.exer.freq
levels = arrange(ipip.exer.freq$exer, desc(ipip.exer.freq$n))
arrange(ipip.exer.freq$exer, desc(ipip.exer.freq$n))
arrange(ipip.exer.freq$exer)
ipip %>% arrange(exer)
ipip.exer.freq %>% arrange(exer)
ipip.exer.freq <- ipip.comp %>% group_by(exer) %>% tally()
ipip.exer.freq
sort(ipip.exer.freq)
ipip.exer.freq %>% arrange(exer)
ipip.exer.freq %>% arrange(exer, n)
ipip.exer.freq %>% arrange(exer, desc(n))
ipip.exer.freq %>% arrange(ipip.exer.freq, desc(n))
ipip.exer.freq %>% arrange(desc(n))
ipip.exer.freq <- ipip.comp %>% group_by(exer) %>% tally() %>% arrange(n)
ipip.exer.freq
ipip.comp$exer <-factor(ipip.comp$exer,
levels = ipip.exer.freq$exer)
summary(ipip.comp)
View(ipip.comp)
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait), sem = sd(mean_trait)/sqrt(count(RID)))
exer.avg <- ipip.comp %>%
group_by(exer,trait)
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait))#, sem = sd(mean_trait)/sqrt(count(RID)))
View(exer.avg)
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait),
n = count(RID))
count(RID)
count(ipip.comp$RID)
count(ipip.comp$RID)
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqr(count()))
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqrt(count()))
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqrt(count(mean_trait)))
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqrt(count(RID)))
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait))
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait))
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait),
count = count(mean_trait))
count(mean_trait)
count(ipip.comp$mean_trait)
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqrt(count(mean_trait)))
count(ipip)
count(ipip.copm)
count(ipip.comp)
count(ipip.comp$mean_trait)
exer.avg <- ipip.comp %>%
)
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqrt(count(.)))
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqrt(count(ipip.comp)))
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqrt(count(ipip.comp)))
View(exer.avg)
View(exer.avg)
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqrt(count(ipip.comp)))
View(exer.avg)
View(exer.avg)
View(exer.avg)
View(exer.avg)
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqrt(length(mean_trait)))
library(tidyverse)
exer.avg <- ipip.comp %>%
group_by(exer,trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqrt(length(mean_trait)))
View(exer.avg)
View(exer.avg)
dodge <- position_dodge(0.5)
ggplot(exer.avg,aes(x=trait,y=avg,colour=exer))+
geom_pointrange(aes(ymin=avg-sem,ymax=avg+sem),
position=dodge)+
labs(x='big 5 trait',y='mean trait value',title='Big 5 and exercise')
ggsave('figures/exer.pdf',units='in',width=7,height=5)
ipip.comp$exer <-factor(ipip.comp$exer)
summary(ipip.comp)
ipip.comp$exer <-factor(ipip.comp$exer,
levels = c('veryRarelyNever', 'less1mo',
'less1wk', '1or2wk', '3or5wk', 'more5wk'))
summary(ipip.comp)
setwd('~/Documents/GitHub/ps9-songaeun')
ipip <- read_csv('ipip50_sample.csv')
library(tidyverse)
setwd('~/Documents/GitHub/ps9-songaeun')
ipip <- read_csv('ipip50_sample.csv')
ipip.l <- ipip %>%
gather(colnames(.)[7:48], key = 'trait_type', value = 'trait_values')
View(ipip.l)
View(ipip.l)
View(ipip.l)
View(ipip.l)
ipip.l <- ipip.l %>%
separate(trait_type, into=c('trait','item'), sep="_")
ipip.comp <- ipip.l %>%
group_by(RID, trait) %>%
summarise(mean_trait=mean(trait_values))
View(ipip.comp)
View(ipip.comp)
ipip.comp <- ipip %>%
select(RID, age, gender, BMI, exer) %>%
left_join(ipip.comp)
ipip.comp$exer <-factor(ipip.comp$exer,
levels = c('veryRarelyNever', 'less1mo',
'less1wk', '1or2wk', '3or5wk', 'more5wk'))
summary(ipip.comp)
View(ipip.comp)
View(ipip.comp)
ipip.comp$trait <-factor(ipip.comp$trait)
View(ipip.comp)
summary(ipip.comp)
exer.avg <- ipip.comp %>%
group_by(exer, trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqrt(length(mean_trait)))
dodge <- position_dodge(0.5)
ggplot(exer.avg,aes(x=trait,y=avg,colour=exer))+
geom_pointrange(aes(ymin=avg-sem,ymax=avg+sem),
position=dodge)+
labs(x='big 5 trait',y='mean trait value',title='Big 5 and exercise')
ggsave('figures/exer.pdf',units='in',width=7,height=5)
ipip.l <- ipip %>%
gather(colnames(.)[7:48], key = 'trait_type', value = 'trait_values')
ipip.l <- ipip.l %>%
separate(trait_type, into=c('trait','item'), sep="_")
ipip.comp <- ipip.l %>%
group_by(RID, trait) %>%
summarise(mean_trait=mean(trait_values))
ipip.comp <- ipip %>%
select(RID, age, gender, BMI, exer) %>%
left_join(ipip.comp)
ipip.comp$exer <-factor(ipip.comp$exer,
levels = c('veryRarelyNever', 'less1mo',
'less1wk', '1or2wk', '3or5wk', 'more5wk'))
exer.avg <- ipip.comp %>%
group_by(exer, trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqrt(length(mean_trait)))
dodge <- position_dodge(0.5)
ggplot(exer.avg,aes(x=trait,y=avg,colour=exer))+
geom_pointrange(aes(ymin=avg-sem,ymax=avg+sem),
position=dodge)+
labs(x='big 5 trait',y='mean trait value',title='Big 5 and exercise')
ggsave('figures/exer.pdf',units='in',width=7,height=5)
gender.avg <- ipip.comp %>%
group_by(gender, trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqrt(length(mean_trait)))
ggplot(gender.avg,aes(x=trait,y=avg,colour=gender))+
geom_pointrange(aes(ymin=avg-sem,ymax=avg+sem),
position=dodge)+
labs(x='big 5 trait',y='mean trait value',title='Big 5 and gender')
ggsave('figures/gender.pdf',units='in',width=5,height=5)
ipip.comp <- ipip.comp %>%
mutate(BMI_cat = case_when(BMI == 18.5 ~ 'underweight',
BMI > 18.5 & BMI <= 25 ~ 'healthy',
BMI > 25   & BMI <= 30 ~ 'overweight',
BMI > 30 ~ 'obese'))
ipip.comp$BMI_cat <- factor(ipip.comp$BMI_cat,
levels = c('underweight', 'healthy', 'overweight', 'obese'))
summary(ipip.comp)
bmi.avg <- ipip.comp %>%
group_by(BMI_cat, trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqrt(length(mean_trait)))
ipip.comp <- ipip.comp %>%
mutate(BMI_cat = case_when(BMI < 18.5 ~ 'underweight',
BMI == 18.5 ~ 'underweight',
BMI > 18.5 & BMI <= 25 ~ 'healthy',
BMI > 25   & BMI <= 30 ~ 'overweight',
BMI > 30 ~ 'obese'))
ipip.comp <- ipip.comp %>%
mutate(BMI_cat = case_when(BMI < 18.5 ~ 'underweight',
BMI >= 18.5 & BMI <= 25 ~ 'healthy',
BMI > 25   & BMI <= 30 ~ 'overweight',
BMI > 30 ~ 'obese'))
ipip.comp$BMI_cat <- factor(ipip.comp$BMI_cat,
levels = c('underweight', 'healthy', 'overweight', 'obese'))
bmi.avg <- ipip.comp %>%
group_by(BMI_cat, trait) %>%
summarise(avg = mean(mean_trait),
sem = sd(mean_trait)/sqrt(length(mean_trait)))
summary(ipip.comp)
ggplot(bmi.avg,aes(x=trait,y=avg,colour=BMI_cat))+
geom_pointrange(aes(ymin=avg-sem,ymax=avg+sem),
position=dodge)+
labs(x='big 5 trait',y='mean trait value',title='Big 5 and BMI')
ggsave('figures/BMI.pdf',units='in',width=7,height=5)
?cor
age.avg <- ipip.comp %>%
group_by(trait) %>%
summarise(corrcoef = cor(age, mean_trait))
ggplot(age.avg,aes(x=trait,y=corrcoef))+
geom_hline(yintercept=0)+
geom_point(size=3)+
labs(x='big 5 trait',y='correlation between trait and age',title='Big 5 and age')
ggsave('figures/age.pdf',units='in',width=4,height=5)
